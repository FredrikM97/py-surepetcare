name: Test Workflow

on:
  push:
    branches:
    - workflow-test
    workflow_dispatch:
      inputs:
        bump:
          description: 'Version bump type'
          required: true
          default: 'patch'
          type: choice
          options:
            - patch
            - minor
            - major

permissions:
  contents: read

jobs:
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment: pypi-publish
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set bump type
        id: bump_type
        run: |
          if [ -z "${{ github.event.inputs.bump }}" ]; then
            echo "bump=patch" >> $GITHUB_OUTPUT
          else
            echo "bump=${{ github.event.inputs.bump }}" >> $GITHUB_OUTPUT
          fi
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
      - name: Install bump2version
        run: pip install bump2version

      - name: Bump version
        run: bump2version ${{ github.event.inputs.bump }} --allow-dirty


      - name: Commit version bump
        run: |
          git add .
          git commit -m "Bump version [skip ci]" || echo "No changes to commit"

      - name: Create version bump branch
        id: create_branch
        run: |
          BRANCH_NAME="bump-version-${{ github.run_id }}"
          git branch "$BRANCH_NAME"
          git checkout "$BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Push version bump branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --set-upstream origin "bump-version-${{ github.run_id }}"


      - name: Install build dependencies
        run: python -m pip install --upgrade build twine

      - name: Build package
        run: python -m build